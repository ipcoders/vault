---
# --------------------------------------------------------------------------
# Purpose:
#   This file contains tasks to create vault secrets.
#
# Required Parameters:
#   - name: secret_kv
#     type: dict
#     notes: 
#      - Contains the key\value to be added to a secret
#      - Example: {'acct1': 'pass1'}
#
#   - name: engine_name
#     type: dict
#
#   - name: engine_type
#     type: str
#
#   - name: secret_name
#     type: str
#
#   - name: is_secret_empty
#     type: bool
#
#   - name: secret_content
#     type: dict
#     notes: Required only if is_secret_empty is false
#
#   - name: backup_dir
#     type: str
#     notes:
#      - A temp file is created before writing to Vault as a precaution
#
# Set Variables:
#
# --------------------------------------------------------------------------

- name: Role Prechecks - Required Vars
  when: >
        engine_name is not defined or 
        engine_type is not defined or
        secret_name is not defined or
        backup_dir is not defined or
        is_secret_empty is not defined or
        secret_content is not defined or
        secret_kv is not defined
  block:
    - name: Error message
      ansible.builtin.debug:
        msg: |
          Required variables are missing:
          - engine_name
          - engine_type
          - secret_name
          - backup_dir 
          - is_secret_empty
          - secret_content 
          - secret_kv 

    - name: Stop execution
      meta: end_play

#Code for future use to support the update of multiple keys\values 
#- name: Set var
#  ansible.builtin.set_fact:
#    secret_kv: "{{ lookup('file', 'files/' + data_file) | from_yaml }}"
#  ignore_errors: true

- name: Create temporary backup
  ansible.builtin.include_tasks:
    file: "backup_secrets.yml"

- name: Create Secret
  when: engine_type in ["kv"]
  block:
    - name: Set var
      ansible.builtin.set_fact:
        secret_path: "{{ engine_name }}/data/{{ secret_name }}"

    - name: Create body with new data
      when: is_secret_empty
      block:
        - name: Set new body
          ansible.builtin.set_fact:
            body:
              data: "{{ secret_kv }}"

    - name: Create body with existing and new data
      when: not is_secret_empty
      block:
        - name: Set var
          ansible.builtin.set_fact:
            data_combined: "{{ secret_content | combine(secret_kv) }}"

        - name: Set new body
          ansible.builtin.set_fact:
            body:
              data: "{{ data_combined }}"

    - name: Write Secret
      when: body is defined
      uri:
        url: "{{ vault_addr }}/v1/{{ secret_path }}"
        method: POST
        headers:
          X-Vault-Token: "{{ vault_token }}"
        body: "{{ body }}"
        status_code: [200, 201, 204, 404]
        body_format: json
        return_content: true
        validate_certs: false
      register: write_result

    - name: Show result
      when: write_result['status'] in [200, 201, 204]
      ansible.builtin.debug:
        msg: "Secret '{{ secret_name }}' was created or updated successfully."

    - name: Write failed
      when: write_result['status'] == 404
      block:
        - name: Error message
          ansible.builtin.debug:
            msg: "Secret '{{ secret_name }}' was not created\\updated."

        - name: Stop execution
          meta: end_play

    - name: Unknown error
      when: write_result['status'] not in [200, 201, 204, 404]
      block:
        - name: Show result
          ansible.builtin.debug:
            msg: "ERROR: Unknown error has occurred"

        - name: Stop execution
          meta: end_play
